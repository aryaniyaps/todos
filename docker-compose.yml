version: "3.9"

services:
  nginx:
    build: "./nginx"
    container_name: todos-nginx
    restart: always
    networks:
      - todos-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx:/nginx
    depends_on:
      - backend
      - frontend

  frontend:
    build:
      context: "./frontend"
      target: "production"
    container_name: todos-frontend
    restart: on-failure
    working_dir: "/frontend/"
    command: "scripts/start-prod.sh"
    environment:
      NODE_ENV: "production"
    networks:
      - todos-frontend
      - todos-proxy
    volumes:
      - ./frontend:/frontend
    depends_on:
      - backend

  backend:
    build:
      context: "./backend"
      target: "production"
    container_name: todos-backend
    restart: on-failure
    working_dir: "/backend/"
    command: "scripts/start-prod.sh"
    environment:
      FLASK_APP: "app:application"
      FLASK_DEBUG: "false"
      FLASK_TESTING: "false"
      FLASK_ENV: "production"
      CORS_ORIGINS: "${CORS_ORIGINS}"
      DATABASE_URL: "${DATABASE_URL}"
      MAIL_SERVER: "${MAIL_SERVER}"
      MAIL_PORT: "${MAIL_PORT}"
      MAIL_DEFAULT_SENDER: "${MAIL_DEFAULT_SENDER}"
      MAIL_USE_TLS: "${MAIL_USE_TLS}"
      MAIL_USERNAME: "${MAIL_USERNAME}"
      MAIL_PASSWORD: "${MAIL_PASSWORD}"
    networks:
      - todos-backend
      - todos-proxy
    volumes:
      - ./backend:/backend
    depends_on:
      - postgres
      - elasticsearch

  postgres:
    image: postgres:14-alpine
    container_name: todos-postgres
    restart: on-failure
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    networks:
      - todos-backend
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:6.2-alpine
    container_name: todos-redis
    restart: on-failure
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    networks:
      - todos-backend
    volumes:
      - ./data/redis:/redis/data

  rabbitmq:
    image: rabbitmq:3.9-alpine
    container_name: reddit-rabbitmq
    restart: on-failure
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD}"
    networks:
      - todos-backend
    volumes:
      - ./data/rabbitmq:/rabbitmq/data

networks:
  todos-backend:
    driver: bridge
  todos-frontend:
    driver: bridge
  todos-proxy:
    driver: bridge
