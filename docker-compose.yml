version: "3.9"

services:
  nginx:
    image: nginx:1.21-alpine
    container_name: todos-nginx
    restart: always
    networks:
      - todos-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend

  frontend:
    build:
      context: "./frontend"
      target: "production"
    container_name: todos-frontend
    restart: always
    working_dir: "/frontend/"
    command: "scripts/start-prod.sh"
    environment:
      NODE_ENV: "production"
    networks:
      - todos-frontend
      - todos-proxy
    volumes:
      - ./frontend:/frontend
    depends_on:
      - backend

  backend:
    build:
      context: "./backend"
      target: "production"
    container_name: todos-backend
    restart: always
    working_dir: "/backend/"
    command: "scripts/start-prod.sh"
    environment:
      FASTAPI_DEBUG: "false"
      ELASTIC_SEARCH_URL: "${ELASTICSEARCH_URL}"
      DATABASE_URL: "${DATABASE_URL}"
    networks:
      - todos-backend
      - todos-proxy
    volumes:
      - ./backend:/backend
    depends_on:
      - postgres
      - elasticsearch
      - redis

  postgres:
    image: postgres:14-alpine
    container_name: todos-postgres
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    networks:
      - todos-backend
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:6.2-alpine
    container_name: todos-redis
    restart: always
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    networks:
      - todos-backend
    volumes:
      - ./data/redis:/redis/data

  rabbitmq:
    image: rabbitmq:3.9-alpine
    container_name: reddit-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD}"
    networks:
      - todos-backend
    volumes:
      - ./data/rabbitmq:/rabbitmq/data

  elasticsearch:
    image: elasticsearch:7.14.2
    container_name: todos-elasticsearch
    restart: always
    environment:
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD}"
      bootstrap.memory_lock: "${ELASTIC_MEMORY_LOCK:-true}"
      discovery.type: "${ELASTIC_DISCOVERY:-single-node}"
      xpack.security.enabled: "${ELASTIC_SECURE:-true}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - todos-backend
    volumes:
      - ./data/elasticsearch:/elasticsearch/data

networks:
  todos-backend:
    driver: bridge
  todos-frontend:
    driver: bridge
  todos-proxy:
    driver: bridge
