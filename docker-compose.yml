version: "3.9"

services:
  haproxy:
    build: "./haproxy"
    container_name: todos-haproxy
    restart: always
    networks:
      - todos-proxy
    ports:
      - "80:80"
    volumes:
      - ./haproxy:/haproxy
    depends_on:
      - backend
      - frontend

  frontend:
    build:
      context: "./frontend"
      target: "production"
    container_name: todos-frontend
    restart: on-failure
    working_dir: "/frontend/"
    command: "scripts/start-prod.sh"
    environment:
      NODE_ENV: "production"
    networks:
      - todos-frontend
      - todos-proxy
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    depends_on:
      - backend

  backend:
    build:
      context: "./backend"
      target: "production"
    container_name: todos-backend
    restart: on-failure
    working_dir: "/backend/"
    command: "scripts/start-prod.sh"
    environment:
      FLASK_APP: "app:application"
      FLASK_ENV: "production"
      CORS_ORIGINS: "${CORS_ORIGINS}"
      SECRET_KEY: "${SECRET_KEY}"
      DATABASE_URL: "${DATABASE_URL}"
      MAIL_SERVER: "${MAIL_SERVER}"
      MAIL_PORT: "${MAIL_PORT}"
      MAIL_DEFAULT_SENDER: "${MAIL_DEFAULT_SENDER}"
      MAIL_USE_TLS: "${MAIL_USE_TLS}"
      MAIL_USERNAME: "${MAIL_USERNAME}"
      MAIL_PASSWORD: "${MAIL_PASSWORD}"
    networks:
      - todos-backend
      - todos-proxy
    volumes:
      - ./backend:/backend
    depends_on:
      - mysql

  mysql:
    image: mysql:8
    container_name: todos-mysql
    restart: on-failure
    environment:
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
    networks:
      - todos-backend
    volumes:
      - ./data/mysql:/var/lib/mysql

networks:
  todos-backend:
    driver: bridge
  todos-frontend:
    driver: bridge
  todos-proxy:
    driver: bridge
